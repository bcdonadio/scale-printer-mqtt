name: Publish images

on:
  workflow_call:
    inputs:
      image_tag:
        description: 'The image tag to publish'
        required: true
        type: string
      platforms:
        description: 'The platforms the image was built for'
        required: true
        type: string
    secrets:
      GH_TOKEN:
        description: 'GitHub token for pushing to GHCR'
        required: true

jobs:
  publish_images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Generate image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/donadiosolutions/scale-daemon
            ghcr.io/donadiosolutions/printer-daemon
          tags: |
            type=raw,value=${{ inputs.image_tag }}
            type=raw,value=latest,enable=${{ github.repository == 'donadiosolutions/scale-printer-mqtt' && inputs.image_tag == github.event.release.tag_name && github.event.release.prerelease == false }}
            type=semver,pattern={{version}},value=${{ inputs.image_tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.image_tag }}
            type=semver,pattern={{major}},value=${{ inputs.image_tag }}

      - name: Build and push images
        uses: docker/bake-action@v4
        with:
          files: |
            ./build.hcl
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.platform=${{ join(fromJson(inputs.platforms), ',') }}
            scale-daemon.tags=${{ steps.meta.outputs.tags }}
            printer-daemon.tags=${{ steps.meta.outputs.tags }}
            scale-daemon.labels=${{ steps.meta.outputs.labels }}
            printer-daemon.labels=${{ steps.meta.outputs.labels }}
          targets: default
