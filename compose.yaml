services:
  mosquitto:
    image: eclipse-mosquitto:2.0.18 # Using a specific stable version
    container_name: mosquitto_broker
    ports:
      - "1883:1883" # Non-TLS
      - "8883:8883" # TLS
    user: 1883:1883 # Run as mosquitto user
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mosquitto/config/mosquitto_passwd:/mosquitto/config/mosquitto_passwd:ro
      - ./mosquitto/certs:/mosquitto/certs:ro
    # The mosquitto_passwd file contains hashed credentials.
    # Default users/passwords (before hashing):
    # - scale_user:scale_password
    # - printer_user:printer_password
    networks:
      - app_net

  scale-daemon:
    image: ${SCALE_DAEMON_IMAGE_NAME}:${IMAGE_TAG}
    container_name: scale_daemon_app
    depends_on:
      - mosquitto
    # For integration tests, we might need to override MQTT_BROKER_HOST
    # to 'mosquitto' and port to 1883, and disable TLS for this local test.
    # This can be done via environment variables if the Python app supports it.
    # Since current Python code has these as constants, an alternative test-specific
    # config or modification would be needed for the app to talk to this local broker.
    # For now, this compose file just sets up the build.
    #
    # If actual /dev devices were to be mapped (requires host support & permissions):
    # devices:
    #   - "/dev/ttyUSB_SCALE:/dev/ttyUSB_SCALE"
    # privileged: true # Often needed for direct device access
    environment:
      MQTT_BROKER_HOST: mosquitto
      MQTT_BROKER_PORT: 1883
      MQTT_USERNAME: scale_user # Must match mosquitto_passwd
      MQTT_PASSWORD: scale_password # Must match mosquitto_passwd
      MQTT_USE_TLS: "false"
      PYTHONUNBUFFERED: 1
      MOCK_SERIAL_DEVICES: ${MOCK_SERIAL_DEVICES}
      RUN_INTEGRATION_TEST: ${RUN_INTEGRATION_TEST}
      # For scale_daemon, topics are likely fixed or can use defaults from code
      # MQTT_DATA_TOPIC: laboratory/scale/data # Default
      # MQTT_COMMAND_TOPIC: laboratory/scale/command # Default
    networks:
      - app_net

  printer-daemon:
    image: ${PRINTER_DAEMON_IMAGE_NAME}:${IMAGE_TAG}
    container_name: printer_daemon_app
    depends_on:
      - mosquitto
      - scale-daemon # Optional, if printer depends on scale being up first for test flow
    # Similar environment overrides as scale-daemon might be needed.
    # devices:
    #   - "/dev/ttyUSB_PRINTER:/dev/ttyUSB_PRINTER"
    # privileged: true
    environment:
      MQTT_BROKER_HOST: mosquitto
      MQTT_BROKER_PORT: 1883
      MQTT_USERNAME: printer_user # Must match mosquitto_passwd
      MQTT_PASSWORD: printer_password # Must match mosquitto_passwd
      MQTT_USE_TLS: "false"
      PYTHONUNBUFFERED: 1
      MOCK_SERIAL_DEVICES: ${MOCK_SERIAL_DEVICES}
      # For printer_daemon, print topic should match scale's data topic
      # MQTT_PRINT_TOPIC: laboratory/scale/data # Default
    networks:
      - app_net

networks:
  app_net:
    driver: bridge
