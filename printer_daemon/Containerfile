# STAGE 1: Builder
FROM python:3.12-alpine AS builder

WORKDIR /app

# Install Poetry
#hadolint ignore=DL3018
RUN apk add --no-cache curl \
    && curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2

# Add poetry to PATH
ENV PATH="/root/.local/bin:${PATH}"

# Copy project definition and lock file (if exists)
COPY pyproject.toml poetry.lock* ./

# Configure poetry to create venv in project (creates poetry.toml)
RUN poetry config virtualenvs.in-project true --local

# Install dependencies - only main group, no dev dependencies, and don't install the project itself
# This will also generate poetry.lock if it doesn't exist
RUN poetry install --no-interaction --no-ansi --no-dev --only main --no-root

# Copy the source code
COPY src/printer_daemon/ ./src/printer_daemon/

# STAGE 2: Tester
FROM builder AS tester
WORKDIR /app
# poetry.toml from builder stage should ensure virtualenvs.in-project is true
# Install dev dependencies, including test dependencies
RUN poetry install --no-interaction --no-ansi --with dev --no-root
# Copy the tests
COPY tests/printer_daemon/ ./tests/printer_daemon/
# Set PYTHONPATH for tests to find modules
ENV PYTHONPATH="/app/src"
# Set default command to run tests
CMD ["poetry", "run", "pytest", "tests/"]

# STAGE 3: Final image (renumber from STAGE 2)
FROM python:3.12-alpine AS final

WORKDIR /app

# Create a non-root user and group
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy the virtual environment from the builder stage
COPY --from=builder /app/.venv ./.venv

# Copy the source code from the builder stage
COPY --from=builder /app/src/ ./src/

# Set environment variables for the virtual environment and PYTHONPATH
ENV PATH="/app/.venv/bin:${PATH}"
ENV PYTHONPATH="/app/src"

# Ensure all files are owned by the appuser
RUN chown -R appuser:appgroup /app

# Switch to the non-root user
USER appuser

# Set the default command to run the application
CMD ["python", "-m", "printer_daemon.main"]

# OCI Labels
LABEL org.opencontainers.image.title="Printer Daemon"
LABEL org.opencontainers.image.description="Daemon to receive MQTT messages and print them."
LABEL org.opencontainers.image.version="0.1.0"
LABEL org.opencontainers.image.authors="Cline <cline@example.com>"
# LABEL org.opencontainers.image.url="URL to project page"
LABEL org.opencontainers.image.source="https://github.com/donadiosolutions/scale-printer-mqtt"
LABEL org.opencontainers.image.licenses="MIT"
# LABEL org.opencontainers.image.vendor="Your Organization"
# LABEL org.opencontainers.image.created="YYYY-MM-DDTHH:MM:SSZ" # Note: This should be set dynamically during the build process
